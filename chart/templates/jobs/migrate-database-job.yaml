{{- if .Values.migrateDatabaseJob.enabled }}
{{- $nodeSelector := or .Values.migrateDatabaseJob.nodeSelector .Values.nodeSelector }}
{{- $affinity := or .Values.migrateDatabaseJob.affinity .Values.affinity }}
{{- $tolerations := or .Values.migrateDatabaseJob.tolerations .Values.tolerations }}
{{- $topologySpreadConstraints := or .Values.migrateDatabaseJob.topologySpreadConstraints .Values.topologySpreadConstraints }}
{{- $securityContext := include "faststackPodSecurityContext" (list . .Values.migrateDatabaseJob) }}
{{- $containerSecurityContext := include "containerSecurityContext" (list . .Values.migrateDatabaseJob) }}
{{- $containerLifecycleHooks := or .Values.migrateDatabaseJob.containerLifecycleHooks .Values.containerLifecycleHooks }}
apiVersion: batch/v1
kind: Job
metadata:
  name: {{ include "faststack.fullname" . }}-run-faststack-migrations
  labels:
    tier: faststack
    component: run-faststack-migrations
    release: {{ .Release.Name }}
    chart: "{{ .Chart.Name }}-{{ .Chart.Version }}"
    heritage: {{ .Release.Service }}
    {{- with .Values.labels }}
      {{- toYaml . | nindent 4 }}
    {{- end }}
  {{- $annotations := dict }}
  {{- if .Values.migrateDatabaseJob.useHelmHooks }}
    {{- $_ := set $annotations "helm.sh/hook" "post-install,post-upgrade" }}
    {{- $_ := set $annotations "helm.sh/hook-weight" "1" }}
    {{- $_ := set $annotations "helm.sh/hook-delete-policy" "before-hook-creation,hook-succeeded" }}
  {{- end }}
  {{- with $annotations := merge $annotations .Values.migrateDatabaseJob.jobAnnotations }}
  annotations: {{- $annotations | toYaml | nindent 4 }}
  {{- end }}
spec:
  {{- if not (kindIs "invalid" .Values.migrateDatabaseJob.ttlSecondsAfterFinished) }}
  ttlSecondsAfterFinished: {{ .Values.migrateDatabaseJob.ttlSecondsAfterFinished }}
  {{- end }}
  template:
    metadata:
      labels:
        tier: faststack
        component: run-faststack-migrations
        release: {{ .Release.Name }}
        {{- if or (.Values.labels) (.Values.migrateDatabaseJob.labels) }}
          {{- mustMerge .Values.migrateDatabaseJob.labels .Values.labels | toYaml | nindent 8 }}
        {{- end }}
      {{- if or .Values.faststackPodAnnotations .Values.migrateDatabaseJob.annotations }}
      annotations:
        {{- if .Values.faststackPodAnnotations }}
          {{- toYaml .Values.faststackPodAnnotations | nindent 8 }}
        {{- end }}
        {{- if .Values.migrateDatabaseJob.annotations }}
          {{- toYaml .Values.migrateDatabaseJob.annotations | nindent 8 }}
        {{- end }}
      {{- end }}
    spec:
      securityContext: {{ $securityContext | nindent 8 }}
      restartPolicy: OnFailure
      nodeSelector: {{- toYaml $nodeSelector | nindent 8 }}
      affinity: {{- toYaml $affinity | nindent 8 }}
      {{- if .Values.schedulerName }}
      schedulerName: {{ .Values.schedulerName }}
      {{- end }}
      tolerations: {{- toYaml $tolerations | nindent 8 }}
      topologySpreadConstraints: {{- toYaml $topologySpreadConstraints | nindent 8 }}
      serviceAccountName: {{ include "migrateDatabaseJob.serviceAccountName" . }}
      {{- if or .Values.registry.secretName .Values.registry.connection }}
      imagePullSecrets:
        - name: {{ template "registry_secret" . }}
      {{- end }}
      containers:
        - name: run-faststack-migrations
          image: {{ template "faststack_image_for_migrations" . }}
          imagePullPolicy: {{ .Values.images.faststack.pullPolicy }}
          securityContext: {{ $containerSecurityContext | nindent 12 }}
          {{- if $containerLifecycleHooks  }}
          lifecycle: {{- tpl (toYaml $containerLifecycleHooks) . | nindent 12 }}
          {{- end }}
          {{- if .Values.migrateDatabaseJob.command }}
          command: {{- tpl (toYaml .Values.migrateDatabaseJob.command) . | nindent 12 }}
          {{- end }}
          {{- if .Values.migrateDatabaseJob.args }}
          args: {{- tpl (toYaml .Values.migrateDatabaseJob.args) . | nindent 12 }}
          {{- end }}
          {{- if .Values.migrateDatabaseJob.applyCustomEnv }}
          envFrom: {{- include "custom_faststack_environment_from" . | default "\n  []" | indent 10 }}
          env: {{- include "custom_faststack_environment" . | indent 10 }}
          {{- else }}
          env:
          {{- end }}
            - name: PYTHONUNBUFFERED
              value: "1"
          {{- include "standard_faststack_environment" . | indent 10 }}
          resources: {{- toYaml .Values.migrateDatabaseJob.resources | nindent 12 }}
          volumeMounts:
            {{- include "faststack_config_mount" . | nindent 12 }}
              {{- if .Values.volumeMounts }}
            {{- toYaml .Values.volumeMounts | nindent 12 }}
            {{- end }}
            {{- if .Values.migrateDatabaseJob.extraVolumeMounts }}
              {{- tpl (toYaml .Values.migrateDatabaseJob.extraVolumeMounts) . | nindent 12 }}
            {{- end }}
        {{- if .Values.migrateDatabaseJob.extraContainers }}
          {{- toYaml .Values.migrateDatabaseJob.extraContainers | nindent 8 }}
        {{- end }}
      volumes:
        - name: config
          configMap:
            name: {{ template "faststack_config" . }}
        {{- if .Values.volumes }}
          {{- toYaml .Values.volumes | nindent 8 }}
        {{- end }}
        {{- if .Values.migrateDatabaseJob.extraVolumes }}
          {{- tpl (toYaml .Values.migrateDatabaseJob.extraVolumes) . | nindent 8 }}
        {{- end }}
{{- end }}
